@using VideoGameLibrary.Web.ViewModels.Game
@model AllGamesQueryModel
<link rel="stylesheet" href="~/css/style.css" asp-append-version="true" />

@{
    ViewBag.Title = "All Games";
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<form method="get">
    <div class="row">
        <div class="col-md-3">
            <div class="form-group">
                <label asp-for="Genre"></label>
                <select asp-for="Genre" class="form-control">
                    <option value="">All</option>
                    @foreach (var category in Model.Genres)
                    {
                        <option value="@category">@category</option>
                    }
                </select>
            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group">
                <label asp-for="Platform"></label>
                <select asp-for="Platform" class="form-control">
                    <option value="">All</option>
                    @foreach (var category in Model.Platforms)
                    {
                        <option value="@category">@category</option>
                    }
                </select>
            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group">
                <label asp-for="GamesPerPage"></label>
                <select asp-for="GamesPerPage" class="form-control">
                    <option value="3">3</option>
                    <option value="6">6</option>
                    <option value="9">9</option>
                </select>
            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group">
                <label asp-for="SearchString"></label>
                <input asp-for="SearchString" class="form-control" placeholder="...">
            </div>
        </div>
  
        <div class="col-md-3">
            <div class="form-group d-grid">
                <input type="submit" value="Search" class="btn btn-primary btn-block" />
            </div>
        </div>
    </div>

    <div class="row mb-1">
        @foreach (var game in Model.Games)
        {
            <div class="col-md-4 mb-3">
                <partial name="_AllGames" model="@game" />
            </div>
        }
    </div>
</form>


@{
    int previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    int maxPage = (int)Math.Ceiling((double)Model.TotalGames /
        Model.GamesPerPage);
}

<div class="row mt-1">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="Game"
           asp-action="All"
           asp-route-currentPage="@previousPage"
           asp-route-category="@Model.Genre"
           asp-route-platform="@Model.Platform"
           asp-route-searchTerm="@Model.SearchString"
           asp-route-sorting="@((int)Model.GameSorting)"><<</a>
    </div>

    @{
        bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage ||
            !Model.Games.Any();
    }

    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-primary
           @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
           asp-controller="Game"
           asp-action="All"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-category="@Model.Genre"
           asp-route-platform="@Model.Platform"
           asp-route-searchTerm="@Model.SearchString"
           asp-route-sorting="@((int)Model.GameSorting)">>></a>
    </div>
</div>

@if (!Model.Games.Any())
{
    <h2 class="text-center">No games match the given criteria!</h2>
}
