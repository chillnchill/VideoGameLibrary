@using VideoGameLibrary.Services.Data.Interfaces
@using VideoGameLibrary.Web.Infrastructure.Extensions
@using VideoGameLibrary.Web.ViewModels.Game
@model GameDetailsViewModel
<link rel="stylesheet" href="~/css/dark.css" asp-append-version="true" />

@inject IModeratorService ModeratorService
@{
	bool isUserModerator = await ModeratorService.ModeratorExistsByUserIdAsync(User.GetId());
}

@{
	ViewData["Title"] = "Game Details";
}

<div class="row">
	<div class="col-md-4">
		<img src="@Model.CoverImg" alt="@Model.Title cover image" class="img-thumbnail">
	</div>
	<div class="col-md-8">
		<h1>@Model.Title</h1>
		<p>@Model.Description</p>
		<ul class="list-group">
			<li class="list-group-item">Released On: @Model.ReleaseDate</li>
			<li class="list-group-item">Price: @(Model.Price == 0.00m ? "Free-to-play" : "$" + Model.Price.ToString())</li>
			@if (Model.NumberOfStars.HasValue)
			{
				<li class="list-group-item">
					Overall Rating:
					@{
						int numberOfFullStars = (int)Model.NumberOfStars.Value;
						bool hasHalfStar = Model.NumberOfStars % 1 != 0;
						int numberOfEmptyStars = 5 - numberOfFullStars - (hasHalfStar ? 1 : 0);
					}
					@for (int i = 0; i < numberOfFullStars; i++)
					{
						<span class="fa fa-star checked"></span>
					}
					@if (hasHalfStar)
					{
						<span class="fa-solid fa-star-half-stroke"></span>
					}
					@for (int i = 0; i < numberOfEmptyStars; i++)
					{
						<span class="fa-regular fa-star"></span>
					}
				</li>
			}
			<li class="list-group-item">Genre: @Model.Genre</li>
			<li class="list-group-item">Platform: @Model.Platform</li>
		</ul>

		@if (Model.IsOwner || isUserModerator)
		{
			<a href="@Url.Action("Edit", "Game", new { id = Model.Id })" class="btn btn-primary mt-3">Edit</a>
			<a href="@Url.Action("Delete", "Game", new { id = Model.Id })" class="btn btn-danger mt-3">Delete</a>

		}

		<a href="@Url.Action("Add", "Review", new { id = Model.Id })" class="btn btn-success mt-3">Add Review</a>

		@if (Model.Reviews != null && Model.Reviews.Any())
		{
			<h2>Reviews</h2>
			<div class="row">
				@foreach (var review in Model.Reviews)
				{
					<div class="col-md-12 mt-2">
						<div class="card">
							<div class="card-body">
								<p class="card-text text-black">By @review.Author</p>
								<hr class="my-2">
								<p class="card-text text-black">@review.Content</p>
								<p class="card-text text-black">Rating: @review.Rating</p>
								<p class="card-text text-black position-absolute bottom-0 end-0">Posted On: @review.Date</p>
								@if (User.Identity.IsAuthenticated && (User.Identity.Name == review.Author || isUserModerator))
								{
									<a href="@Url.Action("Edit", "Review", new { id = review.Id })" class="btn btn-primary">Edit</a>
									<form asp-controller="Review" asp-action="Delete" method="post" class="d-inline">
										<input type="hidden" name="id" value="@review.Id" />
										<button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this review?')">Delete</button>
									</form>
								}
							</div>
						</div>
					</div>
				}
			</div>
		}
	</div>
</div>